"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[246],{2067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"Examples/consent_default","title":"Default consent","description":"Example for default consent","source":"@site/docs/Examples/consent_default.md","sourceDirName":"Examples","slug":"/Examples/consent_default","permalink":"/zeotap-web-sdk-docs/docs/Examples/consent_default","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Examples/consent_default.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Default consent","description":"Example for default consent"},"sidebar":"tutorialSidebar","previous":{"title":"Identitifiers Need Hashing","permalink":"/zeotap-web-sdk-docs/docs/Examples/setUserIdentities_needHashing"},"next":{"title":"Custom consent","permalink":"/zeotap-web-sdk-docs/docs/Examples/consent_custom"}}');var s=n(4848),a=n(8453);const i={sidebar_position:4,title:"Default consent",description:"Example for default consent"},r=void 0,c={},l=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Zeotap SDK - Consent Example (No Management)</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; padding: 20px; max-width: 700px; margin: auto; }\n        button { padding: 10px 15px; font-size: 1em; cursor: pointer; margin-top: 10px; }\n        pre { background-color: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        .instructions { margin-top: 20px; border: 1px solid #ccc; padding: 15px; background-color: #f9f9f9; }\n    </style>\n\n    \x3c!-- 1. Zeotap SDK Integration Snippet --\x3e\n    <script type="text/javascript">\n      !function(e,t){var n=t.createElement("script");n.type="text/javascript",n.crossorigin="anonymous",n.async=!0,n.src="https://content.zeotap.com/sdk/qa/zeotap.min.js",n.onload=function(){};var s=t.getElementsByTagName("script")[0];s.parentNode.insertBefore(n,s);function o(e,t,n){function s(t){e[t]=function(){e[n].push([t].concat(Array.prototype.slice.call(arguments,0)))}}for(var o=0;o<t.length;o++)s(t[o])}var r=e.zeotap||{_q:[],_qcmp:[]};o(r,["init","setEventProperties","setUserProperties","setPageProperties","setMetaProperties","setUserIdentities","unsetUserIdentities","setZI"],"_q"),o(r,["setConsent","addAskForConsentActionListener"],"_qcmp"),e.zeotap=r}(window,document);\n    <\/script>\n\n    \x3c!-- 2. Initialize the SDK --\x3e\n    <script type="text/javascript">\n      // IMPORTANT: Replace "YOUR_WRITE_KEY" with your actual Zeotap Write Key\n      const writeKey = "YOUR_WRITE_KEY";\n\n      // Initialize WITHOUT enabling consent management (`useConsent: false` is default)\n      const sdkOptions = {\n        // useConsent: false // Explicitly false or omitted\n        // optOut: false    // Ensure optOut is false to allow tracking\n      };\n\n      window.zeotap.init(writeKey, sdkOptions);\n      console.log("Zeotap SDK Initialized (Consent Management Disabled).");\n    <\/script>\n</head>\n<body>\n\n    <h1>Zeotap SDK: Consent Example (No Management / Default)</h1>\n\n    <p>This page demonstrates the SDK\'s behavior when consent management is **disabled** (<code>useConsent: false</code>, the default).</p>\n    <p>In this mode, tracking calls (like <code>track</code>) should generally proceed unless the user is globally opted out via the <code>optOut: true</code> configuration.</p>\n\n    <button id="eventButton">setEventProperties \'Test Event\'</button>\n\n    <div class="instructions">\n        <h3>How to Verify</h3>\n        <p>After clicking the button:</p>\n        <ol>\n            <li>Open your browser\'s Developer Tools (usually F12).</li>\n            <li>Check the **Console** tab for the "Called window.zeotap.setEventProperties..." message.</li>\n            <li>Check the **Network** tab. You should see a network request being sent to the Zeotap backend containing the \'Test Event\' data (unless `optOut` was set to `true`).</li>\n        </ol>\n    </div>\n\n    \x3c!-- 3. Script to handle the button click --\x3e\n    <script>\n        document.getElementById(\'eventButton\').addEventListener(\'click\', function() {\n            const eventName = \'Test Event\';\n            const eventProps = { scenario: \'No Consent Management\', timestamp: Date.now() };\n\n            // Call track\n            window.zeotap.setEventProperties(eventName, eventProps);\n\n            // Log to console for verification\n            console.log(`Called window.zeotap.setEventProperties(\'${eventName}\') with:`, eventProps);\n            alert(`Track event called! Check Console & Network tabs. Event should be sent as useConsent=false.`);\n        });\n    <\/script>\n\n</body>\n</html>\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Try out this ",(0,s.jsx)("a",{href:"/examples/consent_defaultEx.html",target:"_blank",children:"example"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var o=n(6540);const s={},a=o.createContext(s);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);