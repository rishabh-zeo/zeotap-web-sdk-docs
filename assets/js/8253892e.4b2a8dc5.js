"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[7927],{5684:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"FAQs/howToSendCellno","title":"How to send cellno","description":"Cellno handling","source":"@site/docs/websdk/FAQs/howToSendCellno.md","sourceDirName":"FAQs","slug":"/FAQs/howToSendCellno","permalink":"/zeotap-web-sdk-docs/websdk/docs/FAQs/howToSendCellno","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1747303977000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"How to send cellno","description":"Cellno handling"},"sidebar":"DocumentationSidebar","previous":{"title":"FAQ","permalink":"/zeotap-web-sdk-docs/websdk/docs/category/faq"}}');var d=s(4848),c=s(8453);const l={sidebar_position:1,title:"How to send cellno",description:"Cellno handling"},r="Cellno Specifications",o={},h=[{value:"Scenario 1: SDK Performs Hashing",id:"scenario-1-sdk-performs-hashing",level:2},{value:"Scenario 2: Sending Raw Identifiers",id:"scenario-2-sending-raw-identifiers",level:2},{value:"Recommendations",id:"recommendations",level:2}];function t(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"cellno-specifications",children:"Cellno Specifications"})}),"\n",(0,d.jsxs)(n.p,{children:["Handling the ",(0,d.jsx)(n.code,{children:"cellno"})," identifier requires careful attention due to potential variations in input format and the implications for hashing, especially when using the SDK's hashing capabilities (",(0,d.jsx)(n.code,{children:"hashIdentities: true"}),")."]}),"\n",(0,d.jsx)(n.h2,{id:"scenario-1-sdk-performs-hashing",children:"Scenario 1: SDK Performs Hashing"}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"hashIdentities"})," is configured as ",(0,d.jsx)(n.code,{children:"true"}),", the SDK generates multiple hashed versions of the phone number based on the format detected in the ",(0,d.jsx)(n.code,{children:"cellno"})," value you provide."]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["Input Format: ",(0,d.jsx)(n.code,{children:"[code<space>number]"})," (Recommended)"]})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Example:"})," ",(0,d.jsx)(n.code,{children:"zeotap.setUserIdentities({ cellno: '1 5551234567' });"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Processing:"})," The space allows the SDK to correctly identify the country code (",(0,d.jsx)(n.code,{children:"1"}),") and the national number (",(0,d.jsx)(n.code,{children:"5551234567"}),")."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Generated Hashes Sent:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_without_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"5551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_with_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"15551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellphone_number_e164_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"+15551234567"}),")"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Result:"})," All generated hashes are valid and correctly represent the input. ",(0,d.jsx)(n.strong,{children:"This is the recommended format."})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["Input Format: ",(0,d.jsx)(n.code,{children:"[codenumber]"})," (Not Recommended)"]})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Example:"})," ",(0,d.jsx)(n.code,{children:"zeotap.setUserIdentities({ cellno: '15551234567' });"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Processing:"})," Without a delimiter, the SDK cannot reliably separate the code and number."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Generated Hashes Sent:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_without_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (",(0,d.jsx)(n.strong,{children:"Incorrect:"})," Hash of the ",(0,d.jsx)(n.em,{children:"entire"})," string ",(0,d.jsx)(n.code,{children:"15551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_with_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"15551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellphone_number_e164_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"+15551234567"}),")"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Result:"})," Only ",(0,d.jsx)(n.code,{children:"_with_country_code"})," and ",(0,d.jsx)(n.code,{children:"_e164"})," hashes are correct. ",(0,d.jsx)(n.code,{children:"_without_country_code"})," hash is invalid. ",(0,d.jsx)(n.strong,{children:"Not recommended."})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["Input Format: ",(0,d.jsx)(n.code,{children:"[number]"})," (Not Recommended)"]})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Example:"})," ",(0,d.jsx)(n.code,{children:"zeotap.setUserIdentities({ cellno: '5551234567' });"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Processing:"})," Only the national number is provided."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Generated Hashes Sent:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_without_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (Hash of ",(0,d.jsx)(n.code,{children:"5551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellno_with_country_code_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (",(0,d.jsx)(n.strong,{children:"Incorrect:"})," Hash of ",(0,d.jsx)(n.code,{children:"5551234567"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"cellphone_number_e164_sha256"})," / ",(0,d.jsx)(n.code,{children:"md5"})," / ",(0,d.jsx)(n.code,{children:"sha1"})," (",(0,d.jsx)(n.strong,{children:"Incorrect:"})," Hash of ",(0,d.jsx)(n.code,{children:"5551234567"}),",  prefixed with ",(0,d.jsx)(n.code,{children:"+"}),")"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Result:"})," Only ",(0,d.jsx)(n.code,{children:"_without_country_code"})," hash is valid. The others lack country code information. ",(0,d.jsx)(n.strong,{children:"Not recommended."})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"scenario-2-sending-raw-identifiers",children:"Scenario 2: Sending Raw Identifiers"}),"\n",(0,d.jsxs)(n.p,{children:["When ",(0,d.jsx)(n.code,{children:"hashIdentities"})," is ",(0,d.jsx)(n.code,{children:"false"}),", the SDK selects the best available raw phone number representation to send to the backend."]}),"\n",(0,d.jsxs)(n.admonition,{type:"warning",children:[(0,d.jsxs)(n.mdxAdmonitionTitle,{children:[(0,d.jsx)(n.code,{children:"cellno_cc"})," Key Deprecated"]}),(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["The ",(0,d.jsx)(n.code,{children:"cellno_cc"})," key is ",(0,d.jsx)(n.strong,{children:"deprecated"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:["For clients already using this key, it is recommened to send the data using ",(0,d.jsx)(n.code,{children:"cellno"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:["If used, the SDK assumes the value is in ",(0,d.jsx)(n.code,{children:"[codenumber]"})," format, leading to the same potentially incorrect hashes as described in point #2 below."]}),"\n"]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Priority Order for Selection:"})}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:[(0,d.jsx)(n.code,{children:"[code<space>number]"})," Format:"]})," If found in either the ",(0,d.jsx)(n.code,{children:"cellno"})," or ",(0,d.jsx)(n.code,{children:"cellno_cc"})," input key, this value is selected.","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Example Input:"})," ",(0,d.jsx)(n.code,{children:"{ cellno: '1 5551234567' }"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Value Sent:"})," ",(0,d.jsx)(n.code,{children:"15551234567"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:[(0,d.jsx)(n.code,{children:"[codenumber]"})," Format (via ",(0,d.jsx)(n.code,{children:"cellno_cc"})," key):"]})," If format #1 is not found, but ",(0,d.jsx)(n.code,{children:"cellno_cc"})," is provided (assumed ",(0,d.jsx)(n.code,{children:"[codenumber]"}),").","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Example Input:"})," ",(0,d.jsx)(n.code,{children:"{ cellno_cc: '15551234567' }"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Value Sent:"})," ",(0,d.jsx)(n.code,{children:"15551234567"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:[(0,d.jsx)(n.code,{children:"[number]"})," Format (via ",(0,d.jsx)(n.code,{children:"cellno"})," key):"]})," If neither #1 nor #2 is found, but ",(0,d.jsx)(n.code,{children:"cellno"})," is provided (assumed ",(0,d.jsx)(n.code,{children:"[number]"}),").","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Example Input:"})," ",(0,d.jsx)(n.code,{children:"{ cellno: '5551234567' }"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.em,{children:"Value Sent:"})," ",(0,d.jsx)(n.code,{children:"5551234567"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.admonition,{title:"Raw Value Selection",type:"note",children:(0,d.jsxs)(n.p,{children:["Only ",(0,d.jsx)(n.em,{children:"one"})," raw phone number value is selected based on this priority and sent when ",(0,d.jsx)(n.code,{children:"hashIdentities: false"}),"."]})}),"\n",(0,d.jsx)(n.h2,{id:"recommendations",children:"Recommendations"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:["When using SDK Hashing (",(0,d.jsx)(n.code,{children:"hashIdentities: true"}),"):"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Always"})," provide phone numbers via the ",(0,d.jsx)(n.code,{children:"cellno"})," key in the ",(0,d.jsx)(n.code,{children:"[code<space>number]"})," format (e.g., ",(0,d.jsx)(n.code,{children:"'1 5551234567'"}),") for accurate generation of all hash types."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:["When sending Raw Identifiers (",(0,d.jsx)(n.code,{children:"hashIdentities: false"}),"):"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Providing ",(0,d.jsx)(n.code,{children:"cellno"})," in the ",(0,d.jsx)(n.code,{children:"[code<space>number]"})," format is preferred as it's the highest priority and most complete representation."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(6540);const d={},c=i.createContext(d);function l(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);