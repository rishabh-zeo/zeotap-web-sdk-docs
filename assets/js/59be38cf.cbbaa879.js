"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[112],{556:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Configurations/allowCookieSync","title":"allowCookieSync","description":"Enable/Disable cookie syncing functionality.","source":"@site/docs/Configurations/allowCookieSync.md","sourceDirName":"Configurations","slug":"/Configurations/allowCookieSync","permalink":"/zeotap-web-sdk-docs/docs/Configurations/allowCookieSync","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Configurations/allowCookieSync.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"allowCookieSync","description":"Enable/Disable cookie syncing functionality."},"sidebar":"DocumentationSidebar","previous":{"title":"ID5 Integration","permalink":"/zeotap-web-sdk-docs/docs/Configurations/id5"},"next":{"title":"Guides & References","permalink":"/zeotap-web-sdk-docs/docs/category/guides--references"}}');var t=o(4848),s=o(8453);const r={sidebar_position:5,title:"allowCookieSync",description:"Enable/Disable cookie syncing functionality."},c=void 0,a={},l=[{value:"allowCookieSync",id:"allowcookiesync",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"allowcookiesync",children:"allowCookieSync"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"Boolean"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Default:"})," ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Description:"})}),"\n",(0,t.jsxs)(n.p,{children:["This option controls whether the Zeotap Web SDK is permitted to perform ",(0,t.jsx)(n.strong,{children:"cookie syncing"})," operations. Cookie syncing is a background process used to match the Zeotap user identifier (ZI) with identifiers from approved third-party advertising platforms or data partners. This matching typically happens via pixel fires or redirects initiated by the SDK."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"true"})," (Default):"]})," When set to ",(0,t.jsx)(n.code,{children:"true"}),", the SDK will automatically initiate cookie syncing processes with configured partners when appropriate conditions are met (e.g., necessary user consent is available). This helps in building a more comprehensive view of the user across different platforms and enables functionalities like audience retargeting or extension."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"false"}),":"]})," When set to ",(0,t.jsx)(n.code,{children:"false"}),", the SDK will ",(0,t.jsx)(n.strong,{children:"not"})," perform any automatic cookie syncing operations, regardless of consent status."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,t.jsxs)(n.p,{children:["You configure ",(0,t.jsx)(n.code,{children:"allowCookieSync"})," within the options object passed to the ",(0,t.jsx)(n.code,{children:"window.zeotap.init"})," method."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example: Disabling Cookie Sync"})}),"\n",(0,t.jsx)(n.p,{children:"If you want to prevent the SDK from initiating any cookie syncs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="SDK Initialization - Disabling Cookie Sync"',children:'window.zeotap.init("YOUR_WRITE_KEY", {\n  allowCookieSync: false // Explicitly disable cookie syncing\n  // ... other configurations\n});\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var i=o(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);