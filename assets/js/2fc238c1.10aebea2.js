"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[8789],{2196:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"initialization","title":"Intialization Guide","description":"After installing the SDK, you need to initialize it in your application. This should be done in your MainApplication.java file to ensure the SDK is ready before any activities start.","source":"@site/docs/androidsdk/initialization.md","sourceDirName":".","slug":"/initialization","permalink":"/zeotap-web-sdk-docs/androidsdk/docs/initialization","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1749460137000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Intialization Guide"},"sidebar":"DocumentationSidebar","previous":{"title":"Installation Guide","permalink":"/zeotap-web-sdk-docs/androidsdk/docs/installation"},"next":{"title":"Configuration Guide","permalink":"/zeotap-web-sdk-docs/androidsdk/docs/configuration"}}');var s=i(4848),l=i(8453);const a={sidebar_position:3,title:"Intialization Guide"},o="SDK Initialization",r={},c=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"Step 1: Create Application Class",id:"step-1-create-application-class",level:3},{value:"Step 2: Register Application Class",id:"step-2-register-application-class",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Required Configuration",id:"required-configuration",level:3},{value:"Complete Configuration Example",id:"complete-configuration-example",level:3},{value:"Configuration Options Reference",id:"configuration-options-reference",level:2},{value:"Initialization with Callback",id:"initialization-with-callback",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Consent Management Setup",id:"consent-management-setup",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Getting SDK Instance",id:"getting-sdk-instance",level:2},{value:"Verification",id:"verification",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"NullPointerException",id:"nullpointerexception",level:3},{value:"Application Class Not Registered",id:"application-class-not-registered",level:3},{value:"Write Key Issues",id:"write-key-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sdk-initialization",children:"SDK Initialization"})}),"\n",(0,s.jsxs)(n.p,{children:["After installing the SDK, you need to initialize it in your application. This should be done in your ",(0,s.jsx)(n.code,{children:"MainApplication.java"})," file to ensure the SDK is ready before any activities start."]}),"\n",(0,s.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-create-application-class",children:"Step 1: Create Application Class"}),"\n",(0,s.jsx)(n.p,{children:"If you don't already have a custom Application class, create one:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import android.app.Application;\nimport com.zeotap.collect.Collect;\nimport com.zeotap.collect.CollectOptions;\n\npublic class MainApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        \n        // Initialize Zeotap SDK\n        CollectOptions options = CollectOptions.builder(this)\n            .credential("<YOUR_WRITE_KEY>")\n            .enableLogging(true)\n            .build();\n            \n        Collect.init(options);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-register-application-class",children:"Step 2: Register Application Class"}),"\n",(0,s.jsxs)(n.p,{children:["Add your Application class to ",(0,s.jsx)(n.code,{children:"AndroidManifest.xml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<application\n    android:name=".MainApplication"\n    android:allowBackup="true"\n    android:icon="@mipmap/ic_launcher"\n    android:label="@string/app_name"\n    android:theme="@style/AppTheme">\n    \n    \x3c!-- Your activities here --\x3e\n    \n</application>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"CollectOptions.Builder"})," provides various configuration options:"]}),"\n",(0,s.jsx)(n.h3,{id:"required-configuration",children:"Required Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<YOUR_WRITE_KEY>")  // Required: Your Zeotap write key\n    .build();\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complete-configuration-example",children:"Complete Configuration Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<YOUR_WRITE_KEY>")\n    .enableLogging(true)                    // Enable debug logging\n    .uploadBatchSize(30)                    // Events per batch (default: 30)\n    .maxCacheSize(100)                      // Max cached events (default: 100)\n    .serviceUploadInterval(90)              // Upload interval in seconds (default: 90)\n    .optOut(false)                          // Opt-out flag (default: false)\n    .useConsent(true)                       // Enable consent management\n    .checkForCMP(false)                     // Check for CMP integration\n    .userCountry("USA")                     // User country (ISO3 code)\n    .areIdentitiesHashed(false)             // Are identities pre-hashed\n    .hashIdentities(true)                   // Hash identities automatically\n    .build();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options-reference",children:"Configuration Options Reference"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"credential()"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Required"})}),(0,s.jsx)(n.td,{children:"Your Zeotap write key"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enableLogging()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Enable debug logging"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"optOut()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Disable event collection"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"uploadBatchSize()"})}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"30"})}),(0,s.jsx)(n.td,{children:"Events per batch (1-50)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"maxCacheSize()"})}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"100"})}),(0,s.jsx)(n.td,{children:"Max cached events (max: 200)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"serviceUploadInterval()"})}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"90"})}),(0,s.jsx)(n.td,{children:"Upload interval in seconds"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"useConsent()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Enable consent management"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"checkForCMP()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Check for CMP integration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"userCountry()"})}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"null"})}),(0,s.jsx)(n.td,{children:"User country (ISO3 code)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"areIdentitiesHashed()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Identities are pre-hashed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"hashIdentities()"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Auto-hash raw identities"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"initialization-with-callback",children:"Initialization with Callback"}),"\n",(0,s.jsx)(n.p,{children:"You can also initialize the SDK with a callback to handle the initialization response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Collect.init(options, (response) -> {\n    // Handle initialization response\n    if (response.containsKey("status")) {\n        String status = (String) response.get("status");\n        if ("success".equals(status)) {\n            Log.d("Zeotap", "SDK initialized successfully");\n        } else {\n            Log.e("Zeotap", "SDK initialization failed: " + response.get("message"));\n        }\n    }\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"consent-management-setup",children:"Consent Management Setup"}),"\n",(0,s.jsx)(n.p,{children:"For GDPR compliance with consent management:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<YOUR_WRITE_KEY>")\n    .useConsent(true)\n    .checkForCMP(true)  // For TCF 2.0 CMP integration\n    .checkZeotapVendorConsent(true)\n    .roleForConsent(RoleForConsent.PUBLISHER)\n    .tcfPublisherConsentCategory(PublisherConsentCategory.CONSENTS)\n    .purposesForTracking(Arrays.asList(1, 3, 4))\n    .purposesForIdentifying(Arrays.asList(1, 9))\n    .build();\n'})}),"\n",(0,s.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(n.p,{children:"For high-traffic applications:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<YOUR_WRITE_KEY>")\n    .uploadBatchSize(50)           // Larger batches\n    .maxCacheSize(200)             // More caching\n    .serviceUploadInterval(60)     // More frequent uploads\n    .build();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"getting-sdk-instance",children:"Getting SDK Instance"}),"\n",(0,s.jsx)(n.p,{children:"After initialization, get the SDK instance in your activities:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class MainActivity extends AppCompatActivity {\n    private Collect collect;\n    \n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        \n        // Get SDK instance\n        collect = Collect.getInstance();\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"verification",children:"Verification"}),"\n",(0,s.jsx)(n.p,{children:"Verify successful initialization:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Check if SDK is initialized\nif (Collect.getInstance() != null) {\n    Log.d("Zeotap", "SDK is ready to use");\n    \n    // Send a test event\n    collect.setEventProperties("app_launched");\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.h3,{id:"nullpointerexception",children:"NullPointerException"}),"\n",(0,s.jsx)(n.p,{children:"Ensure the SDK is initialized before getting the instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Wrong - SDK not initialized\nCollect collect = Collect.getInstance(); // May return null\n\n// Correct - Initialize first\nCollect.init(options);\nCollect collect = Collect.getInstance(); // Returns valid instance\n"})}),"\n",(0,s.jsx)(n.h3,{id:"application-class-not-registered",children:"Application Class Not Registered"}),"\n",(0,s.jsxs)(n.p,{children:["Verify your custom Application class is declared in ",(0,s.jsx)(n.code,{children:"AndroidManifest.xml"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"write-key-issues",children:"Write Key Issues"}),"\n",(0,s.jsx)(n.p,{children:"Ensure you're using the correct write key provided by Zeotap."}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"With the SDK initialized, you can now:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./tracking/events",children:"Track Events"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./user-management/identities",children:"Manage User Identities"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./consent-management/overview",children:"Set Up Consent Management"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);