"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[338],{7872:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Examples/setUserIdentities_needHashing","title":"Identitifiers Need Hashing","description":"Examples showing different ways to handle identifier hashing with setUserIdentities.","source":"@site/docs/Examples/setUserIdentities_needHashing.md","sourceDirName":"Examples","slug":"/Examples/setUserIdentities_needHashing","permalink":"/zeotap-web-sdk-docs/docs/Examples/setUserIdentities_needHashing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Examples/setUserIdentities_needHashing.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Identitifiers Need Hashing","description":"Examples showing different ways to handle identifier hashing with setUserIdentities."},"sidebar":"tutorialSidebar","previous":{"title":"Hashed Identifiers","permalink":"/zeotap-web-sdk-docs/docs/Examples/setUserIdentities_Hashed"},"next":{"title":"Default consent","permalink":"/zeotap-web-sdk-docs/docs/Examples/consent_default"}}');var s=n(4848),a=n(8453);const o={sidebar_position:3,title:"Identitifiers Need Hashing",description:"Examples showing different ways to handle identifier hashing with setUserIdentities."},r=void 0,d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Zeotap SDK - setUserIdentities (SDK Hashing Example)</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; padding: 20px; max-width: 700px; margin: auto; }\n        button { padding: 10px 15px; font-size: 1em; cursor: pointer; margin-top: 10px; }\n        pre { background-color: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n    </style>\n\n    \x3c!-- 1. Zeotap SDK Integration Snippet --\x3e\n    <script type="text/javascript">\n      !function(e,t){var n=t.createElement("script");n.type="text/javascript",n.crossorigin="anonymous",n.async=!0,n.src="https://content.zeotap.com/sdk/qa/zeotap.min.js",n.onload=function(){};var s=t.getElementsByTagName("script")[0];s.parentNode.insertBefore(n,s);function o(e,t,n){function s(t){e[t]=function(){e[n].push([t].concat(Array.prototype.slice.call(arguments,0)))}}for(var o=0;o<t.length;o++)s(t[o])}var r=e.zeotap||{_q:[],_qcmp:[]};o(r,["init","setEventProperties","setUserProperties","setPageProperties","setMetaProperties","setUserIdentities","unsetUserIdentities","setZI"],"_q"),o(r,["setConsent","addAskForConsentActionListener"],"_qcmp"),e.zeotap=r}(window,document);\n    <\/script>\n\n    \x3c!-- 2. Initialize the SDK --\x3e\n    <script type="text/javascript">\n      // IMPORTANT: Replace "YOUR_WRITE_KEY" with your actual Zeotap Write Key\n      const writeKey = "YOUR_WRITE_KEY";\n\n      // Explicitly configure for the "SDK Performs Hashing" scenario\n      const sdkOptions = {\n        hashIdentities: true,       // Enable SDK\'s automatic hashing\n        areIdentitiesHashed: false  // Confirm the values provided ARE NOT already hashed\n      };\n\n      window.zeotap.init(writeKey, sdkOptions);\n      console.log("Zeotap SDK Initialized (SDK Hashing Scenario - Explicit Config).");\n    <\/script>\n</head>\n<body>\n\n    <h1>Zeotap SDK: <code>setUserIdentities</code> (SDK Performs Hashing Example)</h1>\n\n    <p>This page demonstrates providing **raw identifiers** (like email and phone number) to the Zeotap SDK and configuring the SDK to **perform the hashing** itself before sending data.</p>\n    <p>The SDK is explicitly initialized with `hashIdentities: true` and `areIdentitiesHashed: false`.</p>\n\n    <button id="identifyButton">Set Raw Identities (SDK Will Hash)</button>\n\n    <p>Click the button above. Check your browser\'s developer console (F12) to see the function call and the *raw* data being passed to the SDK function. The SDK will hash this data internally before sending.</p>\n\n\n    \x3c!-- 3. Script to handle the button click --\x3e\n    <script>\n        document.getElementById(\'identifyButton\').addEventListener(\'click\', function() {\n            // Define the raw identifiers\n            const rawEmail = \'user@example.com\';\n            const rawCellno = \'1 5551234567\';\n\n            // Define the identities object using standard keys with RAW values\n            const identitiesToHash = {\n              email: rawEmail,       // Use standard \'email\' key with raw value\n              cellno: rawCellno,     // Use standard \'cellno\' key with raw value\n              userId: \'customer-pqr-456\' // Your internal ID\n              // You could also add custom identities here\n            };\n\n            // Call setUserIdentities with the raw data\n            window.zeotap.setUserIdentities(identitiesToHash);\n\n            // Log to console for verification (shows the raw data passed to the function)\n            console.log(\'Called window.zeotap.setUserIdentities with (raw values):\', identitiesToHash);\n            alert(\'setUserIdentities called with raw data (SDK will hash)! Check the console (F12).\');\n        });\n    <\/script>\n\n</body>\n</html>\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Try out this ",(0,s.jsx)("a",{href:"/examples/setUserIdentities_needHashingEx.html",target:"_blank",children:"example"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);