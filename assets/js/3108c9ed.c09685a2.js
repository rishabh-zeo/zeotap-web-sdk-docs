"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[676],{3760:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Consent/customConsent","title":"Custom Consent","description":"You may not want to explicitly give consent or even use the TCF API. Instead, you need to have a custom consent flow. The following initial configurations activate the Custom Consent flow:","source":"@site/docs/Consent/customConsent.md","sourceDirName":"Consent","slug":"/Consent/customConsent","permalink":"/zeotap-web-sdk-docs/docs/Consent/customConsent","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Consent/customConsent.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Custom Consent"},"sidebar":"tutorialSidebar","previous":{"title":"TCF/GDPR","permalink":"/zeotap-web-sdk-docs/docs/Consent/gdpr"},"next":{"title":"Examples","permalink":"/zeotap-web-sdk-docs/docs/category/examples"}}');var o=t(4848),i=t(8453);const a={sidebar_position:3,title:"Custom Consent"},c=void 0,r={},l=[];function d(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"You may not want to explicitly give consent or even use the TCF API. Instead, you need to have a custom consent flow. The following initial configurations activate the Custom Consent flow:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The useConsent flag is set to true"}),"\n",(0,o.jsx)(n.li,{children:"The checkForCMP option is set to false"}),"\n",(0,o.jsxs)(n.li,{children:["The setConsent method is used to resolve the user consent ",(0,o.jsx)(n.a,{href:"/zeotap-web-sdk-docs/docs/APIReference/setConsent",children:"setConsent guide"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The user consent is then stored in cookie storage and used as the user's consent status for the subsequent event log until a new status is set using the same."}),"\n",(0,o.jsx)(n.p,{children:"Call the setConsent method as mentioned below."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"zeotap.setConsent(value)\n"})}),"\n",(0,o.jsx)(n.p,{children:"Value param is categorised in two categories:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{primaryConsent, brandConsent}\n"})}),"\n",(0,o.jsx)(n.p,{children:"primary consent keys - track, cookieSync, identify"}),"\n",(0,o.jsx)(n.p,{children:"Anything other than primary consent keys will be treated as\nbrand consent"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(6540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);