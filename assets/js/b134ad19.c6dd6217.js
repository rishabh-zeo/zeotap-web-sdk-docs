"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9380],{6569:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"consent","title":"Consent Management","description":"How to manage user consent using the Zeotap Android SDK, including support for TCF 2.0 and custom consent flows.","source":"@site/docs/androidsdk/consent.md","sourceDirName":".","slug":"/consent","permalink":"/zeotap-web-sdk-docs/androidsdk/docs/consent","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752498148000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Consent Management","description":"How to manage user consent using the Zeotap Android SDK, including support for TCF 2.0 and custom consent flows."},"sidebar":"DocumentationSidebar","previous":{"title":"Tracking User Properties","permalink":"/zeotap-web-sdk-docs/androidsdk/docs/events/userProperties"}}');var i=t(4848),o=t(8453);const c={sidebar_position:5,title:"Consent Management",description:"How to manage user consent using the Zeotap Android SDK, including support for TCF 2.0 and custom consent flows."},r="Consent Management",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Consent Types",id:"consent-types",level:2},{value:"1. Default Opt-in",id:"1-default-opt-in",level:3},{value:"2. GDPR TCF CMP",id:"2-gdpr-tcf-cmp",level:3},{value:"Configuration",id:"configuration",level:4},{value:"Parameters",id:"parameters",level:4},{value:"3. Custom Consent",id:"3-custom-consent",level:3},{value:"Configuration",id:"configuration-1",level:4},{value:"Custom Consent Implementation",id:"custom-consent-implementation",level:2},{value:"Consent Signals",id:"consent-signals",level:3},{value:"Setting Consent",id:"setting-consent",level:3},{value:"With Callback",id:"with-callback",level:3},{value:"Listening for Consent Requests",id:"listening-for-consent-requests",level:2},{value:"Brand-Specific Consent",id:"brand-specific-consent",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Complete Custom Consent Flow",id:"complete-custom-consent-flow",level:3},{value:"GDPR TCF Implementation",id:"gdpr-tcf-implementation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Consent States",id:"consent-states",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"E-commerce App",id:"e-commerce-app",level:3},{value:"News App",id:"news-app",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"consent-management",children:"Consent Management"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Android SDK provides three different ways to manage user consent for data collection and user identification, ensuring legal compliance with privacy regulations like GDPR."}),"\n",(0,i.jsx)(n.h2,{id:"consent-types",children:"Consent Types"}),"\n",(0,i.jsx)(n.h3,{id:"1-default-opt-in",children:"1. Default Opt-in"}),"\n",(0,i.jsx)(n.p,{children:"Simple boolean flag to control SDK behavior."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<write_key>")\n    .optOut(false) // false = allow data collection, true = block data collection\n    .build();\n'})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"SDK can perform user identification and tracking"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"SDK blocks all user identification and tracking"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"2-gdpr-tcf-cmp",children:"2. GDPR TCF CMP"}),"\n",(0,i.jsx)(n.p,{children:"For apps with existing TCF 2.0 Consent Management Platform."}),"\n",(0,i.jsx)(n.h4,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<write_key>")\n    .useConsent(true)\n    .checkForCMP(true)\n    .checkZeotapVendorConsent(false) // optional\n    .purposesForTracking(Arrays.asList(1, 3, 4))\n    .purposesForIdentifying(Arrays.asList(1, 9))\n    .build();\n'})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"useConsent"})}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"SDK waits for consent signal before processing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"checkForCMP"})}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"Check for TCF 2.0 variables in SharedPreferences"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"checkZeotapVendorConsent"})}),(0,i.jsx)(n.td,{children:"Boolean"}),(0,i.jsx)(n.td,{children:"Check specifically for Zeotap vendor consent"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"purposesForTracking"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"List<Number>"})}),(0,i.jsx)(n.td,{children:"Purpose IDs for tracking consent"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"purposesForIdentifying"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"List<Number>"})}),(0,i.jsx)(n.td,{children:"Purpose IDs for identification consent"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"3-custom-consent",children:"3. Custom Consent"}),"\n",(0,i.jsx)(n.p,{children:"Implement your own consent flow with granular control."}),"\n",(0,i.jsx)(n.h4,{id:"configuration-1",children:"Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<write_key>")\n    .useConsent(true)\n    .checkForCMP(false) // disable TCF checking\n    .build();\n'})}),"\n",(0,i.jsx)(n.h2,{id:"custom-consent-implementation",children:"Custom Consent Implementation"}),"\n",(0,i.jsx)(n.h3,{id:"consent-signals",children:"Consent Signals"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Signal"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"track"})}),(0,i.jsx)(n.td,{children:"Permission to track and record user activities"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"identify"})}),(0,i.jsx)(n.td,{children:"Permission for user matching and identification"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"setting-consent",children:"Setting Consent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Grant both permissions\nMap<String, Object> consent = new HashMap<>();\nconsent.put("track", true);\nconsent.put("identify", true);\nCollect.getInstance().setConsent(consent);\n\n// Grant only tracking, deny identification\nMap<String, Object> consent = new HashMap<>();\nconsent.put("track", true);\nconsent.put("identify", false);\nCollect.getInstance().setConsent(consent);\n\n// Deny all permissions\nMap<String, Object> consent = new HashMap<>();\nconsent.put("track", false);\nconsent.put("identify", false);\nCollect.getInstance().setConsent(consent);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"with-callback",children:"With Callback"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'Map<String, Object> consent = new HashMap<>();\nconsent.put("track", true);\nconsent.put("identify", true);\n\nCollect.getInstance().setConsent(consent, (res) -> {\n    if (res.get("status").equals("success")) {\n        Log.d("SDK", "Consent set successfully");\n    }\n});\n'})}),"\n",(0,i.jsx)(n.h2,{id:"listening-for-consent-requests",children:"Listening for Consent Requests"}),"\n",(0,i.jsx)(n.p,{children:"When consent is not available, the SDK can trigger a callback to request consent from the user."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"Collect.getInstance().listenToAskForConsent(() -> {\n    // Show your consent dialog/UI here\n    showConsentDialog();\n});\n\nprivate void showConsentDialog() {\n    // Your consent UI implementation\n    // After user responds, call setConsent()\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"brand-specific-consent",children:"Brand-Specific Consent"}),"\n",(0,i.jsx)(n.p,{children:"Store additional brand-specific consent alongside main consent."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'Map<String, Object> brandConsent = new HashMap<>();\nbrandConsent.put("track", true);\nbrandConsent.put("identify", true);\nbrandConsent.put("zeotapVendorConsent", true);\nbrandConsent.put("xyzVendorConsent", false);\n\nCollect.getInstance().setConsent(brandConsent);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,i.jsx)(n.h3,{id:"complete-custom-consent-flow",children:"Complete Custom Consent Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class ConsentManager {\n    private Collect collect;\n    \n    public void initializeSDK() {\n        CollectOptions options = CollectOptions.builder(this)\n            .credential("<write_key>")\n            .useConsent(true)\n            .checkForCMP(false)\n            .build();\n            \n        Collect.init(options);\n        collect = Collect.getInstance();\n        \n        // Listen for consent requests\n        collect.listenToAskForConsent(this::requestUserConsent);\n    }\n    \n    private void requestUserConsent() {\n        // Show consent dialog\n        showConsentDialog((userAccepted) -> {\n            setUserConsent(userAccepted);\n        });\n    }\n    \n    private void setUserConsent(boolean userAccepted) {\n        Map<String, Object> consent = new HashMap<>();\n        consent.put("track", userAccepted);\n        consent.put("identify", userAccepted);\n        \n        collect.setConsent(consent, (res) -> {\n            Log.d("Consent", "Consent status: " + res.get("status"));\n        });\n    }\n    \n    public void updateConsent(boolean allowTracking, boolean allowIdentification) {\n        Map<String, Object> consent = new HashMap<>();\n        consent.put("track", allowTracking);\n        consent.put("identify", allowIdentification);\n        collect.setConsent(consent);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"gdpr-tcf-implementation",children:"GDPR TCF Implementation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'CollectOptions options = CollectOptions.builder(this)\n    .credential("<write_key>")\n    .useConsent(true)\n    .checkForCMP(true)\n    .checkZeotapVendorConsent(true)\n    .purposesForTracking(Arrays.asList(1, 3, 4, 6)) // Store info, personalization, ad selection, measurement\n    .purposesForIdentifying(Arrays.asList(1, 9, 10)) // Store info, understand audiences, develop products\n    .build();\n\nCollect.init(options);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Initialize Early"}),": Set up consent management before any tracking calls"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Store Consent"}),": SDK automatically stores consent in SharedPreferences"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update When Changed"}),": Call ",(0,i.jsx)(n.code,{children:"setConsent()"})," whenever user changes preferences"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle Edge Cases"}),": Always listen for consent requests for better UX"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Thoroughly"}),": Verify consent flows work correctly in all scenarios"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"consent-states",children:"Consent States"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"State"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"SDK Behavior"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"No Consent"})}),(0,i.jsx)(n.td,{children:"No consent signal received"}),(0,i.jsxs)(n.td,{children:["SDK waits, triggers ",(0,i.jsx)(n.code,{children:"listenToAskForConsent"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Granted"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"track: true, identify: true"})}),(0,i.jsx)(n.td,{children:"Full SDK functionality enabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Partial"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"track: true, identify: false"})}),(0,i.jsx)(n.td,{children:"Tracking enabled, identification disabled"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Denied"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"track: false, identify: false"})}),(0,i.jsx)(n.td,{children:"All data collection blocked"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,i.jsx)(n.h3,{id:"e-commerce-app",children:"E-commerce App"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// User accepts marketing emails but not personalized ads\nMap<String, Object> consent = new HashMap<>();\nconsent.put("track", true);        // Track purchase behavior\nconsent.put("identify", false);    // Don\'t link across devices\nCollect.getInstance().setConsent(consent);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"news-app",children:"News App"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// User wants personalized content but no tracking\nMap<String, Object> consent = new HashMap<>();\nconsent.put("track", false);       // No behavioral tracking\nconsent.put("identify", true);     // Allow content personalization\nCollect.getInstance().setConsent(consent);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);